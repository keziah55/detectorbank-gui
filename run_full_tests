#!/bin/bash

if [ -z "$PYTHON_VERSION" ]; then 
    pythonVersion=`python3 -c "import sys; v=sys.version_info; print(f'{v.major}.{v.minor}')"`
else
    pythonVersion="$PYTHON_VERSION"
fi

if [ -z "$DETBANKDIR" ]; then
    detBankDir="/usr/local/lib/python$pythonVersion/dist-packages"
else
    detBankDir="$DETBANKDIR"
fi

detBankFound=`find $detBankDir -name detectorbank.py -type f`
if [[ -z $detBankFound ]]; then
    echo "detectorbank.py not found in $detBankDir"
    echo "Please install DetectorBank or set PYTHON_VERSION and/or DETBANKDIR appropriately"
    echo "See https://github.com/keziah55/DetectorBank for installation instructions"
    exit 1
else
    for file in $detBankFound; do # not the best way to do this, but it works
        DIR="$(dirname "${file}")"
        export PYTHONPATH=$DIR:$PYTHONPATH
    done
fi


#export PYTHONPATH=$detBankDir:$PYTHONPATH

origDir="$PWD"
testDir="../detectorbank-gui-test"
resultsDir="results"
ts=`date +%s%6N` # timestamp in ms

# remove resultsDir from current directory, so the results can be moved over at the end of this script
if [ -d "$resultsDir" ]; then
    rm -rf $resultsDir/*
fi

if [ -d "$testDir" ]; then
    rm -rf $testDir/*
else
    mkdir -p $testDir
fi

cd $testDir
echo "cd $testDir"

git clone git@github.com:keziah55/detectorbank-gui.git

# make venv in detectorbank-gui-test, not detectorbank-gui, because pytest was picking up
# conftest.py files from modules installed in the venv (e.g. numpy)
python3 -m venv .

cd detectorbank-gui
echo "cd detectorbank-gui"
echo $PWD

../bin/python -m pip -V

../bin/python -m pip install -r requirements.txt --no-cache-dir --no-warn-script-location
../bin/python -m pip install pytest pytest-qt pytest-cov pytest-profiling setuptools --no-cache-dir --no-warn-script-location

mkdir "$resultsDir"

pythonVersion=`python3 -c "import sys; v=sys.version_info; print(f'{v.major}.{v.minor}')"`
if [[ $pythonVersion == "3.11" ]]; then
    echo "3.11"
    declare -a qt_bindings=("pyqt5" "pyside6" "pyqt6")
    declare -a qt_bindings_pretty=("PyQt5" "PySide6" "PyQt6")
else
    declare -a qt_bindings=("pyside2" "pyqt5" "pyside6" "pyqt6")
    declare -a qt_bindings_pretty=("PySide2" "PyQt5" "PySide6" "PyQt6")
fis

for qt_api in "${qt_bindings[@]}"; do
    export QT_API=$qt_api
    export PYTEST_QT_API=$qt_api
    echo "QT_API: $QT_API"
    echo "PYTEST_QT_API: $PYTEST_QT_API"
    ../bin/python -m pytest -v --cov=detectorbankgui --cov-report xml:"./$resultsDir/$qt_api-coverage.xml" --profile-svg --junitxml="./$resultsDir/$qt_api-results.xml" | tee "./$resultsDir/$qt_api-output.log"
    mv prof "$resultsDir/$qt_api-prof"
done

testDataDir="detectorbankgui/test/test_data"
if [ -d $testDataDir ]; then
    echo "moving test_data to results:"
    echo $testDataDir
    echo $resultsDir
    mv "$testDataDir" "$resultsDir"
fi

join () {
  local IFS="$1"
  shift
  echo "$*"
}
qts=`join , "${qt_bindings_pretty[@]}"`

../bin/python reports/makeTestReport.py --out "$resultsDir/report.html" --ts $ts --qt $qts

mv "$resultsDir" "$origDir"
